apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app-v1
  namespace: dd-project01
  labels:
    app.kubernetes.io/instance: backend-app
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: backend-app
    app.kubernetes.io/version: 2.3.5
    helm.sh/chart: backend-app-1.2.2
  annotations:
    deployment.kubernetes.io/revision: '2'
    meta.helm.sh/release-name: backend-app
    meta.helm.sh/release-namespace: dd-project01
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: backend-app
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: backend-app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: backend-app
        app.kubernetes.io/version: 2.3.5
        helm.sh/chart: backend-app-1.2.2
      annotations:
        sidecar.istio.io/inject: 'true'
        sidecar.istio.io/proxyCPU: 100m
        sidecar.istio.io/proxyCPULimit: 100m
        sidecar.istio.io/proxyMemory: 256M
        sidecar.istio.io/proxyMemoryLimit: 256M
        sidecar.istio.io/rewriteAppHTTPProbers: 'true'
        traffic.sidecar.istio.io/excludeOutboundPorts: '9092'
    spec:
      containers:
        - name: backend-app
          image: >-
            nexus-ci.ru/myteam-docker-snapshot/backend-app:2.3.5
          ports:
            - containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: backend-app-config
          env:
            - name: DB_HOSTNAME
              value: postgresq.db.ru:5432
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 1000m
              memory: 1Gi
          volumeMounts:
            - name: client-http-tls-secret
              readOnly: true
              mountPath: /etc/ssl/certs/java
            - name: logback-config
              readOnly: true
              mountPath: /config
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
          startupProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
          imagePullPolicy: Always
        - name: fluent-bit
          image: nexus-ci.ru/myteam-docker-snapshot/fluent/fluent-bit:2.5.7
          ports:
            - containerPort: 2020
              protocol: TCP
          resources:
            limits:
              cpu: 30m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 100Mi
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 2020
          imagePullPolicy: IfNotPresent
      volumes:
        - name: client-http-tls-secret
          secret:
            secretName: backend-app-client-http-tls-secret
            defaultMode: 420
        - name: logback-config
          configMap:
            name: backend-app-logback-config
            defaultMode: 420
      imagePullSecrets:
        - name: backend-app-nexus-docker-registry
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - backend-app
              topologyKey: kubernetes.io/hostname
